import time

from datasets.data_loader import *
import csv

from sklearn.metrics import matthews_corrcoef, accuracy_score
from sklearn.model_selection import train_test_split as tts_sklearn
from sklearn.decomposition import PCA
from xgboost import XGBClassifier
from sklearn.model_selection import GridSearchCV

from mdr import MDR



import datetime


now = datetime.datetime.now()
day = now.strftime("%Y%m%d")


########################################################################################################################

# DATASETS & ALGORITHMS

########################################################################################################################


top_two_snp = [3656,
 3438,
 2724,
 606,
 3279,
 1694,
 2598,
 3789,
 3364,
 3332,
 2889,
 4316,
 696,
 2654,
 859,
 1779,
 4071,
 2781,
 1386,
 2374,
 3232,
 1330,
 3297,
 409,
 2885,
 3535,
 2583,
 1736,
 63,
 4321,
 1505,
 973,
 4264,
 3984,
 1315,
 2055,
 2519,
 3060,
 732,
 1058,
 1741,
 2542,
 265,
 725,
 1350,
 4353,
 1010,
 280,
 3139,
 4030,
 3073,
 4484,
 2993,
 1679,
 2170,
 2421,
 2808,
 3738,
 487,
 4152]
top_five_snp = [2724,
 3279,
 2598,
 3332,
 440,
 1912,
 447,
 859,
 4047,
 4456,
 2038,
 2175,
 451,
 4374,
 4257,
 3750,
 170,
 3232,
 2885,
 2583,
 998,
 2450,
 2932,
 1007,
 1505,
 2349,
 3635,
 3171,
 4289,
 4037,
 4146,
 3984,
 2542,
 265,
 3072,
 523,
 3416,
 3073,
 4484,
 1681,
 2170,
 829,
 3738,
 1736,
 4152,
 2374,
 3656,
 2642,
 695,
 1889,
 3316,
 982,
 696,
 1828,
 2654,
 4160,
 4189,
 1447,
 2635,
 1582,
 3878,
 63,
 973,
 3484,
 1315,
 2519,
 2795,
 3060,
 732,
 1741,
 2255,
 4353,
 1010,
 3139,
 3627,
 487,
 4264,
 2056,
 88,
 1694,
 4386,
 2456,
 3789,
 3155,
 756,
 564,
 2245,
 1405,
 3205,
 2256,
 1837,
 3430,
 4071,
 3156,
 1999,
 2819,
 4311,
 4321,
 3408,
 3188,
 3616,
 2948,
 725,
 1431,
 1350,
 280,
 1679,
 2421,
 2527,
 3438,
 606,
 3364,
 2889,
 3142,
 4316,
 2315,
 1779,
 3507,
 2369,
 1384,
 3047,
 4062,
 2781,
 3876,
 1386,
 3771,
 4343,
 1176,
 1330,
 3297,
 1229,
 409,
 3535,
 1577,
 4457,
 4022,
 2055,
 1868,
 1058,
 4099,
 121,
 4030,
 2993,
 2808]
top_ten_snp = [2724,
 3225,
 2068,
 3279,
 2598,
 2155,
 3513,
 3332,
 686,
 440,
 1912,
 447,
 31,
 859,
 4047,
 4123,
 4456,
 2038,
 2175,
 2042,
 451,
 4374,
 4257,
 749,
 3750,
 170,
 3232,
 100,
 524,
 2885,
 4365,
 2583,
 3349,
 2450,
 998,
 2932,
 4188,
 2533,
 1007,
 1505,
 2349,
 3635,
 3171,
 4289,
 3972,
 4146,
 4037,
 4073,
 1266,
 3984,
 3270,
 2542,
 265,
 3072,
 523,
 8,
 3614,
 6,
 3416,
 3521,
 3073,
 922,
 2427,
 4484,
 4233,
 1746,
 4491,
 1681,
 4,
 4149,
 2170,
 829,
 3738,
 1736,
 4152,
 2374,
 3656,
 2642,
 695,
 1362,
 1758,
 1889,
 3316,
 982,
 1750,
 696,
 1828,
 3344,
 2654,
 4160,
 4189,
 1382,
 2061,
 1447,
 2882,
 3572,
 2635,
 1582,
 2863,
 3370,
 3878,
 3820,
 2224,
 63,
 3569,
 973,
 3599,
 1855,
 3484,
 1315,
 886,
 2519,
 2795,
 3060,
 732,
 1741,
 2772,
 1493,
 3462,
 2255,
 831,
 4353,
 1010,
 3139,
 2336,
 1143,
 3339,
 870,
 3627,
 3835,
 3375,
 574,
 1997,
 2610,
 487,
 4264,
 2324,
 2056,
 88,
 1727,
 1694,
 4386,
 3166,
 2456,
 2231,
 1857,
 3155,
 756,
 3203,
 3789,
 564,
 2823,
 1264,
 1018,
 2245,
 2084,
 1852,
 2327,
 1405,
 1929,
 3884,
 3205,
 2256,
 1837,
 3430,
 1418,
 4071,
 557,
 3156,
 1999,
 1228,
 2794,
 2819,
 1524,
 4311,
 4321,
 3408,
 474,
 2686,
 2503,
 4319,
 268,
 2637,
 3188,
 3616,
 2948,
 1306,
 725,
 599,
 2268,
 1793,
 796,
 2585,
 1431,
 1350,
 688,
 280,
 3167,
 3020,
 1932,
 3695,
 3374,
 1679,
 2083,
 2421,
 2527,
 2141,
 145,
 3438,
 626,
 606,
 877,
 873,
 3986,
 3364,
 1263,
 2889,
 3142,
 4316,
 2315,
 1779,
 3507,
 2369,
 1384,
 3047,
 4062,
 883,
 2781,
 3876,
 1386,
 3771,
 4343,
 1176,
 3297,
 2784,
 3153,
 1330,
 1229,
 409,
 3535,
 1577,
 3851,
 593,
 4457,
 841,
 2658,
 1321,
 2646,
 4022,
 2055,
 181,
 1868,
 3778,
 1058,
 124,
 1911,
 1621,
 990,
 2774,
 2845,
 2530,
 2091,
 4099,
 121,
 4030,
 892,
 442,
 2993,
 3895,
 2808,
 1614,
 2343,
 3703]


results = {}

# # Loads the data via the dataset loader
data = pd.read_csv('../../../Bicocca/GWAS/data/gwas_FINAL_cleaned_ordered.csv')
#
# # getting the name of the dataset
dataset = 'GWAS'
# curr_dataset = 'GWAS'


snps = [4353, 4071, 1681, 3047, 2255, 3364, 4321, 4456, 4289, 3155] #top 5 of best two runs rscoding ['rs2562397', 'rs9693589', 'rs138793869', 'rs142878172', 'rs114574888', 'rs187286355', 'rs3138080', 'rs192024158', 'rs147029639', 'rs139613498']
# snsp  = [4353,4321,4289,3364,3047,4071,4456,3851,2091,2155,2255,1681,1266,3155] #top 7 best two runs
# snps = top_ten_snp
# snps.extend([-i for i in range(2, 10)])
X = data.values[:, snps]
# X = data.values[:, -9:-1]
y = data.values[:, -1]

for seed in range(30):

    start = time.time()


    X_train, X_test, y_train, y_test = tts_sklearn(X, y,
                                                   stratify=y,
                                                   test_size=0.2,
                                                   shuffle=True,
                                                   random_state=seed)



    my_mdr = MDR()


    train_pred = my_mdr.fit_transform(X_train, y_train)
    test_pred = my_mdr.transform(X_test)


    # train_pred = clf.predict(X_train)
    train_corr = matthews_corrcoef(y_train, train_pred)


    # test_pred = clf.predict(X_test)
    test_corr = matthews_corrcoef(y_test, test_pred)

    print(test_corr)

    # with open(os.path.join(os.getcwd(), "log", f"mdr_gwas_FULL_slim_{day}.csv"), 'a', newline='') as file:
    #     writer = csv.writer(file)
    #     writer.writerow(
    #         ['MDR', seed, dataset, train_corr,  test_corr])